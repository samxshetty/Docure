from flask import Flask, request, render_template, redirect, url_for
import os
import spacy
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.preprocessing import StandardScaler
from sklearn.ensemble import RandomForestClassifier
from sklearn.model_selection import train_test_split
from signature import match as match_signatures

# Initialize Flask app
app = Flask(__name__)
app.config['UPLOAD_FOLDER'] = 'uploads'
THRESHOLD = 85

# Ensure upload directories exist
os.makedirs(app.config['UPLOAD_FOLDER'], exist_ok=True)

# Load NLP model
nlp = spacy.load('en_core_web_sm')

# Load dataset (replace with actual dataset)
your_dataset = [
        ("This is a sample text.", 0),
    ("This is a sample AI-generated text.", 1),
    ("This is a human-generated text about technology.", 0),
    ("AI systems continue to advance in various fields.", 1),
    ("The beauty of nature is truly mesmerizing.", 0),
    ("Generated by a state-of-the-art language model.", 1),
    ("Learning new things every day is a human experience.", 0),
    ("The following paragraph is AI-generated.", 1),
    ("The algorithmic marvel effortlessly navigated through complex data structures.", 1),
    ("In the realm of artificial intelligence, innovation knows no bounds.", 1),
    ("This text is the result of machine learning algorithms at work.", 1),
    ("Automated systems are reshaping the landscape of modern technology.", 1),
    ("Generated by a cutting-edge language model, this text showcases AI capabilities.", 1),
    ("bruh what a life this is",0),
    ("helppp im drowningg",0),
    ("What a beautiful day to go running",0),
    ("ohhh!! its so sunny and beautiful.Can we please hang out?",0),
    ("Damn! this text is getting long.",0),
    ("computer science is interesting",0),
    ("Chat gpt ruins brains",0),
    ("The machine learned to play chess and defeated grandmasters.", 1),
    ("In the virtual world, algorithms create art that captivates audiences.", 1),
    ("AI-driven chatbots provide instant and intelligent customer support.", 1),
    ("The neural network generated creative poetry with a touch of surrealism.", 1),
    ("Automated systems analyze vast datasets to predict future trends.", 1),
    ("""In the vast landscape of technological innovation, artificial intelligence stands as a beacon of unprecedented advancement. With its intricate algorithms and neural networks, AI has the capacity to process vast amounts of information, discern patterns, and generate coherent and contextually relevant content. It transcends traditional boundaries, offering solutions in fields ranging from healthcare to finance. The ability of AI models, like the one generating this paragraph, to understand and respond to human language showcases the transformative power that these technologies hold, ushering in a new era of possibilities and efficiency.""",1),
    ("It always had been a dream of mine to be a part of the school band . When I was in class 5 I used to admire the way the seniors were really engrossed into it as they created beautiful tunes for us kids and others to enjoy.. After a few years this dream of mine turned into reality and I was entrusted with a sidedrum and this memory is etched deep into my heart.",0),
    ("Also how could I ever forget the school days, the wonderful mix of information and entertainment which will always leave an ineradicable mark in our memory. All these days keep getting better and better as the years pass.",0),
    ("As we navigate the digital frontier, artificial intelligence emerges as a catalyst for transformative change. The dynamic nature of AI algorithms enables machines to learn, adapt, and innovate, mirroring the intricate complexities of human cognition. From natural language processing to image recognition, AI's versatility is reshaping industries and streamlining processes. It serves as both a guide and a co-creator, augmenting human capabilities and fostering a synergy that propels us into uncharted realms of discovery. The paragraph you're reading is a testament to the remarkable potential of AI, seamlessly constructing coherent narratives with an understanding of context and language nuances.",1),
    ("""Based on the search results, "PK" is considered an All Time Blockbuster movie, while "Dabangg" is classified as a Blockbuster movie. "PK" has received critical acclaim and performed exceptionally well at the box office. On the other hand, "Dabangg" has also been successful but not to the extent of "PK." Therefore, based on box office success and critical reception, "PK" could be considered the better movie between the two.If you are looking for a highly successful and critically acclaimed Bollywood movie, "PK" would be a strong choice compared to "Dabangg".""",0),
    ("In the boundless expanse of the cosmos, space exploration represents humanity's unquenchable thirst for knowledge. Cutting-edge technologies propel spacecraft into the depths of the universe, unveiling the mysteries of distant planets, stars, and galaxies. Each mission, whether robotic or manned, expands our understanding of the cosmos, offering glimpses into the origins of our existence and the potential for life beyond our celestial home.",1),
    ("Amidst the growing concerns about climate change, environmental conservation takes center stage as a collective responsibility. From sustainable practices to renewable energy initiatives, individuals and communities worldwide are mobilizing to protect our planet. The urgency to preserve biodiversity, reduce carbon footprints, and adopt eco-friendly lifestyles underscores the critical role each of us plays in ensuring a sustainable and vibrant future for generations to come.",1),
    ("The integration of artificial intelligence in healthcare is revolutionizing the medical landscape. AI-driven diagnostics, predictive analytics, and personalized treatment plans are enhancing patient care, improving efficiency, and driving medical breakthroughs. As algorithms analyze vast datasets, they unveil patterns that empower healthcare professionals with valuable insights, paving the way for precision medicine and more effective disease management.",1),
    ("In the diverse tapestry of global cuisines, culinary fusion emerges as a delightful and innovative trend. Chefs, drawing inspiration from different culinary traditions, skillfully blend flavors, techniques, and ingredients to create dishes that transcend cultural boundaries. The result is a harmonious symphony of taste that celebrates diversity, inviting food enthusiasts to embark on a gastronomic journey that transcends borders and embraces the richness of culinary fusion.",1),
    ("With the dawn of the 21st century, the future of transportation is undergoing a radical transformation. Electric vehicles, hyperloop technology, and autonomous vehicles are reshaping the way we move from one place to another. These advancements not only promise increased efficiency and reduced environmental impact but also pose intriguing questions about the integration of smart cities and the evolving dynamics of urban mobility.",1),
    ("There was one man running into a dark forest. Suddenly he got slipped and luckily he caught branch of a tree.But now comes the twist,Below the tree, there is one river full of crocodiles and the branch was continuously nibbling by the rats. He was getting worried. Now how would he help himself?.While he was thinking, another twist vame, here comes the elephant who start shaking the tree.",0),
    ("After graduation every friend I had ever known was settled and had a motive in life, but for me, I was just coming home to uncertainty. I was wandering about I had no purpose, and it was the depressing phase. My father advised me to give myself a free fall, the benefit of doubt to actually realise what I want in life. He said, money is never the ultimate solution, it helps you but should never be your goal. So jobs and earning money should never be the utmost priority in life but before that you should increase yourself in depth, you should reach out for knowledge. Knowledge should be the priority because there is more to life than paying bills and dying, it's learning, exploring and becoming someone who defines who you really are, deep inside we are all astronauts, painters, poets and writers waiting for redemption.",0),
    ("Let me tell you about my father. My father is the elder child of my grandparents. At that time, due to family pressure and poverty, he could not attend school. Near my village is a railway station colony where 20 families stay. During those days (1995- 2000s), my father used to supply water to those families for their daily use as there was no water supply. He used to wake up at 4 a.m. He used to supply water from a tube well in two buckets. He used to lift the weight with the help of a bamboo lathi. He used to get 4 to 5000 rupees per month. In those 5000 rupees, our family used to maintain. Later on, the Railway colony was connected to the 24*7 water supply. Eventually, my father lost that work and started working as a labourer on a railway track. I must say that was tough because you have to work hard in sun all day and you must realize how much the temperature will be near the railway track. Do you know how much he used to get per day? It was 120 rupees. This work continued till 2013 when he got to experience, and the contractor engaged him as a supervisor on the site to maintain the labour force. Today he earns 400 rupees per day which are around 12000 per month.",0),
    ("""When I was a child, my mom used to prepare garlands for buses. The buses passing near my village used to buy them for morning puja. I used to sell flower garlands to the public buses standing on the road, and I used to get 40-50 rupees daily. These earnings were used to maintain our daily vegetables and groceries.Let me tell you about my home. It was a Kacha house with straws on the roof and no electricity. During the rainy season, leaks in the top made it hard to sleep. The rooms were small and congested. But one thing I must say is that we never felt sad and bad about my home. It was heaven for me, one of the best places where I feel good and comfortable. As we didn’t have electricity, we studied a major part of education in the lamp.""",0),
    ("""He replied " I know that crop won't come out but I'm doing it as a matter of "practice". After 12 years I will forget the process of growing crops n working in the field so I must keep it doing so that I'm fit to produce the crop, the moment there is rain after 12 yearsHearing his argument Goddess Parvati praised his version before Lord Shiva & said You may also lose the practice of playing the Damru after 12 years.The innocent Lord Shiva in his anxiety just tried to play the Damru, if he could, and hearing the sound of Damru immediately there was rain n the farmer who was regularly working in the field got his crop emerged immediately and others were disappointed.""",0),
]

texts, labels = zip(*your_dataset)
docs = list(nlp.pipe(texts))
lemmatized_texts = [" ".join([token.lemma_ for token in doc]) for doc in docs]
vectorizer = TfidfVectorizer(max_features=5000)
X_transformed = vectorizer.fit_transform(lemmatized_texts)
X_train, X_test, y_train, y_test = train_test_split(X_transformed, labels, test_size=0.2, random_state=42)
scaler = StandardScaler()
X_train_scaled = scaler.fit_transform(X_train.toarray())
X_test_scaled = scaler.transform(X_test.toarray())
classifier = RandomForestClassifier(n_estimators=300, random_state=42)
classifier.fit(X_train_scaled, y_train)

# Global variables to store results
extracted_text = ""
signature_result = ""
text_classification_result = ""

# Function to predict the label for a given input text
def predict_label(input_text):
    input_doc = nlp(input_text)
    lemmatized_input_text = " ".join([token.lemma_ for token in input_doc])
    X_input_transformed = vectorizer.transform([lemmatized_input_text])
    X_input_scaled = scaler.transform(X_input_transformed.toarray())
    predicted_label = classifier.predict(X_input_scaled)[0]
    return predicted_label

# Function to check if file type is allowed
def allowed_file(filename):
    return '.' in filename and filename.rsplit('.', 1)[1].lower() in {'png', 'jpg', 'jpeg', 'gif'}

@app.route('/', methods=['GET', 'POST'])
def index():
    global extracted_text, signature_result, text_classification_result

    if request.method == 'POST':
        # Handle manual text input
        if 'manual_text' in request.form:
            manual_text = request.form['manual_text']
            extracted_text = manual_text
            predicted_label = predict_label(manual_text)
            text_classification_result = "AI-generated text" if predicted_label == 1 else "Human-generated text"
        
        # Handle signature verification
        if 'file1' in request.files and 'file2' in request.files:
            file1 = request.files['file1']
            file2 = request.files['file2']
            if file1 and allowed_file(file1.filename) and file2 and allowed_file(file2.filename):
                file1_path = os.path.join(app.config['UPLOAD_FOLDER'], file1.filename)
                file2_path = os.path.join(app.config['UPLOAD_FOLDER'], file2.filename)
                
                file1.save(file1_path)
                file2.save(file2_path)

                try:
                    similarity = match_signatures(file1_path, file2_path)
                    signature_result = "Genuine signatures" if similarity > THRESHOLD else "Possible forgery"
                except Exception as e:
                    signature_result = f"Error during signature matching: {e}"

        # Redirect to result page after processing
        return redirect(url_for('result'))

    return render_template('index.html')

@app.route('/result', methods=['GET'])
def result():
    global extracted_text, signature_result, text_classification_result

    # Debugging output
    print(f"Extracted Text: {extracted_text}")
    print(f"Signature Result: {signature_result}")
    print(f"Text Classification Result: {text_classification_result}")

    # Generate the final result based on the available data
    if extracted_text and signature_result:
        if text_classification_result == "Human-generated text" and signature_result == "Genuine signatures":
            final_result = "Both the text and signatures appear genuine."
        elif text_classification_result == "AI-generated text" and signature_result == "Possible forgery":
            final_result = " The text is 'AI GENERATED' and signature is 'FORGED'."
        elif text_classification_result=="Human-generated text" and signature_result=="Possible forgery":
            final_result="The text is 'HUMAN WRITTEN ', but the signature 'IS FORGED'. "
        elif text_classification_result=="AI-generated text" and signature_result=="Genuine signatures":
            final_result="The text is 'AI GENERATED' but the signatures are 'GENUINE'"
    else:
        final_result = "Insufficient data to determine result."

    return render_template('result.html', final_result=final_result)
@app.route('/about')
def about():
    return render_template('about.html')

if __name__ == '__main__':
    app.run(debug=True)
